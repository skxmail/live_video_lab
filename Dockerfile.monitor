# Dockerfile para herramientas de monitoreo de calidad de streaming
FROM python:3.9-slim

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    ffmpeg \
    jq \
    curl \
    wget \
    git \
    build-essential \
    cmake \
    pkg-config \
    libx264-dev \
    libx265-dev \
    libvpx-dev \
    libmp3lame-dev \
    libopus-dev \
    libvorbis-dev \
    libass-dev \
    libfreetype6-dev \
    libfontconfig1-dev \
    libfribidi-dev \
    libharfbuzz-dev \
    libwebp-dev \
    libzimg-dev \
    libxvidcore-dev \
    libtheora-dev \
    libspeex-dev \
    libopencore-amrnb-dev \
    libopencore-amrwb-dev \
    libvo-amrwbenc-dev \
    && rm -rf /var/lib/apt/lists/*

# Instalar dependencias de Python
RUN pip install --no-cache-dir \
    requests \
    numpy \
    pandas \
    matplotlib \
    seaborn \
    plotly \
    flask \
    flask-cors \
    gunicorn \
    psutil \
    netifaces

# Crear directorio de trabajo
WORKDIR /app

# Copiar scripts de monitoreo básico
COPY src/monitor/quality_analyzer.sh /app/quality_analyzer.sh
COPY src/monitor/*.py /app/


RUN chmod +x /app/quality_analyzer.sh /app/*.py 

# Crear directorios necesarios
RUN mkdir -p /app/logs /app/stream_analysis /tmp

# Copiar documentación y script de prueba
COPY src/monitor/README_STREAM_ANALYSIS.md /app/README_STREAM_ANALYSIS.md

# Nota: GPAC, VMAF y Bento4 se pueden instalar manualmente si es necesario
# GPAC: apt-get install gpac (en sistemas compatibles)
# VMAF requiere Python 3.10+ y puede instalarse con: pip install vmaf
# Bento4 se puede compilar desde source si es necesario

# Copiar script de inicio
COPY src/monitor/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Exponer puerto para el dashboard
EXPOSE 8081

# Configurar entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# Comando por defecto
CMD ["sh", "-c", "python3 /app/stream_analysis_suite.py \"$MANIFEST_URL\" -i \"${MONITOR_INTERVAL:-30}\""]
